{"version":3,"sources":["webpack:///./src/components/post.js","webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["Post","data","post","card","location","title","description","excerpt","article","main","h1","sx","paddingBottom","aside","p","paddingTop","a","href","textDecoration","color","border","fontSize","date","body","pageQuery","MDXRenderer","require","module","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"yLAwCeA,EA/BF,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,KAAQC,EAAzB,EAAyBA,SAAzB,OACX,YAAC,IAAD,CAAQA,SAAUA,GAChB,YAAC,IAAD,CACEC,MAAOH,EAAKG,MACZC,YAAaJ,EAAKK,QAClBC,SAAS,EACTL,KAAMA,IAER,wBACE,YAAC,IAAD,CACEM,KACE,YAAC,IAAOC,GAAR,CAAWC,GAAI,CAAEC,cAAe,SAAWV,EAAKG,OAElDQ,MACE,YAAC,IAAOC,EAAR,CAAUH,GAAI,CAAEI,WAAY,IAC1B,YAAC,IAAOC,EAAR,CACEC,KAAK,IACLN,GAAI,CAAEO,eAAgB,OAAQC,MAAO,UAAWC,OAAQ,SAF1D,iBAMA,uBACA,oBAAMT,GAAI,CAAEU,SAAU,IAAMnB,EAAKoB,SAIvC,YAAC,cAAD,KAAcpB,EAAKqB,SCnCzB,0CAKe,0BAAGnB,EAAH,EAAGA,SAAUH,EAAb,EAAaA,KAAb,OAAwB,kBAAC,EAAD,CAAMA,KAAMA,EAAMG,SAAUA,KAApD,IAEFoB,EAAS,c,uBCDtB,IAAMC,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,gyDCTf,IAAMG,EAAQF,EAAd,Q,EACkCA,EAAQ,QAAlCG,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBL,EAAQ,QAAxBK,YAERJ,UAAiB,SAAqB,GAKlC,IAJFK,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C","file":"component---src-templates-post-js-914a311e412eac3f8658.js","sourcesContent":["/** @jsx jsx */\nimport React from \"react\"\nimport { Styled, jsx } from \"theme-ui\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport ContentWithAside from \"../components/content-with-aside\"\n\nconst Post = ({ data: { post, card }, location }) => (\n  <Layout location={location}>\n    <SEO\n      title={post.title}\n      description={post.excerpt}\n      article={true}\n      card={card}\n    />\n    <main>\n      <ContentWithAside\n        main={\n          <Styled.h1 sx={{ paddingBottom: \"80px\" }}>{post.title}</Styled.h1>\n        }\n        aside={\n          <Styled.p sx={{ paddingTop: 1 }}>\n            <Styled.a\n              href=\"/\"\n              sx={{ textDecoration: \"none\", color: \"inherit\", border: \"none\" }}\n            >\n              Rodrigo Pombo\n            </Styled.a>\n            <br />\n            <span sx={{ fontSize: 1 }}>{post.date}</span>\n          </Styled.p>\n        }\n      />\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </main>\n  </Layout>\n)\n\nexport default Post\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Post from \"../components/post\"\n\nexport default ({ location, data }) => <Post data={data} location={location} />\n\nexport const pageQuery = graphql`\n  query($id: String!, $relativeDirectory: String = \"home\") {\n    post: blogPost(id: { eq: $id }) {\n      id\n      title\n      date(formatString: \"MMMM DD, YYYY\")\n      excerpt\n      body\n    }\n    card: file(\n      name: { eq: \"card\" }\n      relativeDirectory: { eq: $relativeDirectory }\n    ) {\n      childImageSharp {\n        fixed(height: 628) {\n          src\n        }\n      }\n    }\n  }\n`\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}